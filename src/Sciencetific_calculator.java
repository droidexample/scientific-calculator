/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author My
 */
public class Sciencetific_calculator extends javax.swing.JFrame {
    private boolean zerodisp;
    private boolean decdisp;
    private boolean shift;
    private boolean dgrred;
    
    private boolean dgrrad;
    private boolean ah;
    
    private byte op;
    private int averagecount;
    
    
    private double ina;
    private double inb;
    private double out;
    
    
    /**
     * Creates new form Sciencetific_calculator
     */
    public Sciencetific_calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        display1 = new javax.swing.JTextField();
        display2 = new javax.swing.JTextField();
        multidisplay = new javax.swing.JTextField();
        average = new javax.swing.JButton();
        mc = new javax.swing.JButton();
        onedividedxy = new javax.swing.JButton();
        ms = new javax.swing.JButton();
        mr = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        Momor = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        squared = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        five = new javax.swing.JButton();
        add = new javax.swing.JButton();
        six = new javax.swing.JButton();
        four = new javax.swing.JButton();
        roots = new javax.swing.JButton();
        sub = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        cubed = new javax.swing.JButton();
        multi = new javax.swing.JButton();
        three = new javax.swing.JButton();
        degree = new javax.swing.JRadioButton();
        redius = new javax.swing.JRadioButton();
        decipoint = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        plusminus = new javax.swing.JButton();
        division = new javax.swing.JButton();
        cuberoot = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        eight = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 0));

        display1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        display1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display1ActionPerformed(evt);
            }
        });

        display2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        display2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display2ActionPerformed(evt);
            }
        });

        multidisplay.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        multidisplay.setText("0");
        multidisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multidisplayActionPerformed(evt);
            }
        });

        average.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        average.setText("avg");
        average.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                averageActionPerformed(evt);
            }
        });

        mc.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        mc.setText("MC");
        mc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcActionPerformed(evt);
            }
        });

        onedividedxy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        onedividedxy.setText("1/x");
        onedividedxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onedividedxyActionPerformed(evt);
            }
        });

        ms.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        ms.setText("MS");
        ms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msActionPerformed(evt);
            }
        });

        mr.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        mr.setText("MR");
        mr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrActionPerformed(evt);
            }
        });

        sin.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sin.setText("Sin");
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        tan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tan.setText("Tan");
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        percent.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        percent.setText("%");
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        Momor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Momor.setText("M+");
        Momor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MomorActionPerformed(evt);
            }
        });

        seven.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        squared.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        squared.setText("x^2");
        squared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaredActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        roots.setText("âˆšx");
        roots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootsActionPerformed(evt);
            }
        });

        sub.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        sub.setText("-");
        sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subActionPerformed(evt);
            }
        });

        one.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        cubed.setText("x^3");
        cubed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cubedActionPerformed(evt);
            }
        });

        multi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        multi.setText("*");
        multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        buttonGroup1.add(degree);
        degree.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        degree.setSelected(true);
        degree.setText("Degree");

        buttonGroup1.add(redius);
        redius.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        redius.setText("Redius");

        decipoint.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        decipoint.setText(".");
        decipoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decipointActionPerformed(evt);
            }
        });

        equal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        plusminus.setText("+/-");
        plusminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusminusActionPerformed(evt);
            }
        });

        division.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        division.setText("/");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        cuberoot.setText("3âˆšx");
        cuberoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuberootActionPerformed(evt);
            }
        });

        cos.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cos.setText("cos");
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        clear.setText("cc");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        reset.setText("c");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        zero.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(decipoint, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(plusminus, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cuberoot, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(multi, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(degree, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(redius, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(Momor, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(onedividedxy, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(six, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .addComponent(nine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(roots, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tan))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(mr, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(average, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(multidisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(display1)
                            .addComponent(display2))))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(multidisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onedividedxy, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(degree)
                    .addComponent(redius)
                    .addComponent(Momor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(average, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roots, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decipoint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusminus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(division, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cuberoot, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void display1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display1ActionPerformed

    private void display2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display2ActionPerformed

    private void averageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_averageActionPerformed
     inb=Double.parseDouble(String.valueOf(display1.getText()));
     out = out + inb;
     averagecount++;
     display1.setText("0");
     display2.setText("Average");
     zerodisp=false;
     decdisp=false;
    }//GEN-LAST:event_averageActionPerformed

    private void msActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msActionPerformed

    private void mcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mcActionPerformed

    private void mrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrActionPerformed
      display1.setText("0");
      zerodisp = false;
      decdisp = false;
    }//GEN-LAST:event_mrActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
    inb = Double.parseDouble(String.valueOf(display1.getText()));
       if(!shift)
       {
           if(!dgrred){
               display2.setText("sin(" + String.valueOf(inb) + ")");
              inb = inb *  0.0174532925; 
           }
          out = Math.sin(inb);
       }
       else
       {
             display2.setText("sinh(" + String.valueOf(inb) + ")");
             out = Math.sinh(inb);
       }
       display1.setText(String.valueOf(out));
       out = 0;
    }//GEN-LAST:event_sinActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
      inb = Double.parseDouble(String.valueOf(display1.getText()));
       if(!shift)
       {
           if(!dgrred){
               display2.setText("tan(" + String.valueOf(inb) + ")");
              inb = inb *  0.0174532925; 
           }
          out = Math.tan(inb);
       }
       else
       {
             display2.setText("tan(" + String.valueOf(inb) + ")");
             out = Math.tanh(inb);
       }
       display1.setText(String.valueOf(out));
       out = 0;
    }//GEN-LAST:event_tanActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
           if(op == 0){
        ina = Double.parseDouble(String.valueOf(display1.getText()));
    }
    else{
        inb = Double.parseDouble(String.valueOf(display1.getText()));
    }
      if(op == 1){
        out= ina + inb;
    }
      if(op == 2){
        out= ina - inb;
    }
       if(op == 3){
        out= ina * inb;
    }
     if(op == 4){
        out= ina / inb;
    }
      if(op == 5){
        out=ina * inb /100;
    }
      display1.setText("o");
      display2.setText(String.valueOf(ina) + " %( ");
      op=5;
      decdisp = false;
      zerodisp = false;
    }//GEN-LAST:event_percentActionPerformed

    private void MomorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MomorActionPerformed
       multidisplay.setText(String.valueOf(Double.parseDouble(String.valueOf(display1.getText())) + Double.parseDouble(String.valueOf(multidisplay.getText()))));
    }//GEN-LAST:event_MomorActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "7");
       zerodisp = true;
    }//GEN-LAST:event_sevenActionPerformed

    private void squaredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaredActionPerformed
     inb = Double.parseDouble(String.valueOf(display1.getText()));
     out = inb * inb;
      if(out > -1000000000 && out< 1000000000){
        display1.setText(String.valueOf(out));
    }
       else
       {
           display1.setText("Error");
       }
      display2.setText(String.valueOf(inb) + " * " +(String.valueOf(inb)));
      out=0;
      op =0;
    }//GEN-LAST:event_squaredActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "9");
       zerodisp = true;
    }//GEN-LAST:event_nineActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "5");
       zerodisp = true;
    }//GEN-LAST:event_fiveActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    if(op == 0){
        ina = Double.parseDouble(String.valueOf(display1.getText()));
    }
    else{
        inb = Double.parseDouble(String.valueOf(display1.getText()));
    }
      if(op == 1){
        out= ina + inb;
    }
      if(op == 2){
        out= ina - inb;
    }
       if(op == 3){
        out= ina * inb;
    }
     if(op == 4){
        out= ina / inb;
    }
      if(op == 5){
        out=ina * inb /100;
    }
      display1.setText("o");
      display2.setText(String.valueOf(ina) + " + ");
      op=1;
      decdisp = false;
      zerodisp = false;
     
      
    }//GEN-LAST:event_addActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
         if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "6");
       zerodisp = true;
    }//GEN-LAST:event_sixActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "4");
       zerodisp = true;
    }//GEN-LAST:event_fourActionPerformed

    private void rootsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootsActionPerformed
       inb = Double.parseDouble(String.valueOf(display1.getText()));
       out = Math.sqrt(inb);
       display1.setText(String.valueOf(out));
      display2.setText( " âˆš " +(String.valueOf(inb)));
      out=0;
      op= 0;
    }//GEN-LAST:event_rootsActionPerformed

    private void subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subActionPerformed
         if(op == 0){
        ina = Double.parseDouble(String.valueOf(display1.getText()));
    }
    else{
        inb = Double.parseDouble(String.valueOf(display1.getText()));
    }
      if(op == 1){
        out= ina + inb;
    }
      if(op == 2){
        out= ina - inb;
    }
       if(op == 3){
        out= ina * inb;
    }
     if(op == 4){
        out= ina / inb;
    }
      if(op == 5){
        out=ina * inb /100;
    }
      display1.setText("o");
      display2.setText(String.valueOf(ina) + " - ");
      op= 2;
      decdisp = false;
      zerodisp = false;
    }//GEN-LAST:event_subActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
         if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "1");
       zerodisp = true;
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "2");
       zerodisp = true;
    }//GEN-LAST:event_twoActionPerformed

    private void cubedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cubedActionPerformed
     inb = Double.parseDouble(String.valueOf(display1.getText()));
     out = inb * inb * inb;
      if(out > -1000000000 && out< 1000000000){
        display1.setText(String.valueOf(out));
    }
       else
       {
           display1.setText("Error");
       }
      display2.setText(String.valueOf(inb) + " * " +(String.valueOf(inb) + " * " +(String.valueOf(inb))));
      out=0;
      op =0;
    }//GEN-LAST:event_cubedActionPerformed

    private void multiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiActionPerformed
            if(op == 0){
        ina = Double.parseDouble(String.valueOf(display1.getText()));
    }
    else{
        inb = Double.parseDouble(String.valueOf(display1.getText()));
    }
      if(op == 1){
        out= ina + inb;
    }
      if(op == 2){
        out= ina - inb;
    }
       if(op == 3){
        out= ina * inb;
    }
     if(op == 4){
        out= ina / inb;
    }
      if(op == 5){
        out=ina * inb /100;
    }
      display1.setText("o");
      display2.setText(String.valueOf(ina) + " * ");
      op=3;
      decdisp = false;
      zerodisp = false;
    }//GEN-LAST:event_multiActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "3");
       zerodisp = true;
    }//GEN-LAST:event_threeActionPerformed

    private void decipointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decipointActionPerformed
       if(!decdisp){
           display1.setText(display1.getText() +".");
           decdisp = true;
       }
    }//GEN-LAST:event_decipointActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
    inb=Double.parseDouble(String.valueOf(display1.getText()));
    if(averagecount !=0)  {
       out = out/averagecount;
       display2.setText("Average of  " + String.valueOf(averagecount) + "  values");
      }
    if(op == 0 && averagecount == 0){
        out=inb;
        display2.setText(String.valueOf(inb));
    }
     if(op == 1){
        out= ina + inb;
        display2.setText(display2.getText() + String.valueOf(inb));
    }
      if(op == 2){
        out= ina - inb;
        display2.setText(display2.getText() + String.valueOf(inb));
    }
       if(op == 3){
        out= ina * inb;
        display2.setText(display2.getText() + String.valueOf(inb));
    }
     if(op == 4){
        out= ina / inb;
        display2.setText(display2.getText() + String.valueOf(inb));
    }
      if(op == 5){
        out= ina * inb /100;
        display2.setText(display2.getText() + String.valueOf(inb));
    }
       if(out > -1000000000 && out< 1000000000){
        display1.setText(String.valueOf(out));
    }
       else
       {
           display1.setText("Error");
       }
       ina = 0;
       inb = 0;
       out = 0;
       op = 0;
       averagecount= 0;
       
       decdisp = false;
       zerodisp = false;
    }//GEN-LAST:event_equalActionPerformed
    
    private void plusminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusminusActionPerformed
       inb = Double.parseDouble(String.valueOf(display1.getText()));
       out = inb *-1;
       if(out > -10000000 && out<1000000000){
           display1.setText(String.valueOf(out));
       }
       else
       {
           display1.setText("Error");
       }
    }//GEN-LAST:event_plusminusActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
          if(op == 0){
        ina = Double.parseDouble(String.valueOf(display1.getText()));
    }
    else{
        inb = Double.parseDouble(String.valueOf(display1.getText()));
    }
      if(op == 1){
        out= ina + inb;
    }
      if(op == 2){
        out= ina - inb;
    }
       if(op == 3){
        out= ina * inb;
    }
     if(op == 4){
        out= ina / inb;
    }
      if(op == 5){
        out=ina * inb /100;
    }
      display1.setText("o");
      display2.setText(String.valueOf(ina) + " / ");
      op= 4;
      decdisp = false;
      zerodisp = false;
    }//GEN-LAST:event_divisionActionPerformed

    private void cuberootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuberootActionPerformed
     inb = Double.parseDouble(String.valueOf(display1.getText()));
       out = Math.cbrt(inb);
       display1.setText(String.valueOf(out));
      display2.setText( " 3âˆš " +(String.valueOf(inb)));
      out=0;
      op= 0;
    }//GEN-LAST:event_cuberootActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        inb = Double.parseDouble(String.valueOf(display1.getText()));
       if(!shift)
       {
           if(!dgrred){
               display2.setText("cos(" + String.valueOf(inb) + ")");
              inb = inb *  0.0174532925; 
           }
          out = Math.cos(inb);
       }
       else
       {
             display2.setText("cos(" + String.valueOf(inb) + ")");
             out = Math.cosh(inb);
       }
       display1.setText(String.valueOf(out));
       out = 0;
    }//GEN-LAST:event_cosActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
      display1.setText("0");
      zerodisp = false;
      decdisp = false;
      
    }//GEN-LAST:event_clearActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
      display1.setText("0");
      display2.setText(null);
      zerodisp = false;
      decdisp = false;
      ina = 0;
      inb = 0;
      out = 0;
      averagecount = 0; 
    }//GEN-LAST:event_resetActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "0");
       zerodisp = true;
    }//GEN-LAST:event_zeroActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText(null);
       }
       display1.setText(display1.getText() + "8");
       zerodisp = true;
    }//GEN-LAST:event_eightActionPerformed

    private void multidisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multidisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multidisplayActionPerformed

    private void onedividedxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onedividedxyActionPerformed
      inb = Double.parseDouble(String.valueOf(display1.getText()));
     out = 1/inb;
      if(out > -1000000000 && out< 1000000000){
        display1.setText(String.valueOf(out));
    }
       else
       {
           display1.setText("Error");
       }
      display2.setText(" 1/ " +(String.valueOf(inb)));
      out=0;
      op =0;
    }//GEN-LAST:event_onedividedxyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sciencetific_calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sciencetific_calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sciencetific_calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sciencetific_calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sciencetific_calculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Momor;
    private javax.swing.JButton add;
    private javax.swing.JButton average;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JButton cubed;
    private javax.swing.JButton cuberoot;
    private javax.swing.JButton decipoint;
    private javax.swing.JRadioButton degree;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JButton division;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mc;
    private javax.swing.JButton mr;
    private javax.swing.JButton ms;
    private javax.swing.JButton multi;
    private javax.swing.JTextField multidisplay;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton onedividedxy;
    private javax.swing.JButton percent;
    private javax.swing.JButton plusminus;
    private javax.swing.JRadioButton redius;
    private javax.swing.JButton reset;
    private javax.swing.JButton roots;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton squared;
    private javax.swing.JButton sub;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
